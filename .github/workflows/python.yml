name: MscTime Server

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/python.yml'
      - '!app_python/**.md'
      - '!**.md'
    branches: [ "main" ]

  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/python.yml'
      - '!app_python/**.md'
      - '!**.md'

defaults:
  run:
    working-directory: app_python
    shell: bash

permissions:
  contents: read

jobs:
  testing_app:
    permissions:
      security-events: write

    name: Test application
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3

    - name: Setup environment
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Dependencies handling
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - uses: snyk/actions/setup@master
    - name: Snyk testing
      continue-on-error: true
      run: snyk test --sarif-file-output=snyk.sarif
      env:
        SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}

    - name: Upload results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ./app_python/snyk.sarif

    - name: Linter
      if: always()
      run: |
        make lint
    - name: Unit testing
      if: always()
      run: |
        make test

  build_push:
    needs: testing_app
    name: Docker image build and push
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SignIn to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - uses: docker/setup-buildx-action@v2
      - name: Build and release image
        uses: docker/build-push-action@v5
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python_app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/python_app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/python_app:buildcache,mode=max

  snyk-docker-scan:
    runs-on: ubuntu-22.04
    needs: build_push
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@master

      - name: Check docker image vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/python_app:latest
          args: --file=app_python/Dockerfile --sarif-file-output=snyk.sarif

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif