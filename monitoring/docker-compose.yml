version: '3.7'

x-logging: &default-logger
  logging:
    driver: 'json-file'
    options:
      max-size: '50m'
      max-file: '2'
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

networks:
  loki:

services:
  app_python:
    container_name: app_python
    restart: always
    image: dashvayet/app_python:latest
    ports:
      - "5000:5000"
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:5000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy: &limiter
      resources:
        limits:
          memory: 200M
    <<: *default-logger

  app_cplusplus:
    container_name: app_cplusplus
    restart: always
    image: dashvayet/app_cplusplus:latest
    ports:
       - "10000:10000"
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:10000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *limiter
    <<: *default-logger

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - '9090:9090'
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", " wget --no-verbose --tries=1 -O /dev/null http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *limiter
    <<: *default-logger


  promtail:
    container_name: promtail
    restart: always
    image: grafana/promtail:2.9.1
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers/:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:9080/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *limiter
    <<: *default-logger

  grafana:
    container_name: grafana
    restart: always
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
        - ./prometeus-setup.yml:/etc/grafana/provisioning/datasources/prometeus.yml:ro
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            basicAuth: false
            access: proxy

            url: http://loki:3100
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *limiter
    <<: *default-logger

  loki:
    image: grafana/loki:2.0.0
    restart: always
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    ports:
      - '3100:3100'
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 -O /dev/null http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *limiter
    <<: *default-logger

volumes:
  prometheus-data:
